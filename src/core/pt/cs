#!/bin/bash



function configure_system_pt() {
    local CHOICE=-1

    while true; do
        clear

        echo "Escolha uma opção para configurar o sistema e o hardware:"
        echo "1. Configurar o Fuso Horário"
        echo "2. Configurar o Nome do Host"
        echo "3. Configurar Idioma e Layout do Teclado"
        echo "4. Instalar e Configurar Software Essencial"
        echo "5. Detectar e Instalar Drivers de Vídeo"
        echo "6. Otimizar o Desempenho da CPU"
        echo "7. Configurar RAM e Configurações de SSD"
        echo "8. Instalar Software de Impressora e Scanner"
        echo "9. Configurar Configurações de Energia"
        echo "10. Configurar Segurança do Sistema"
        echo "11. Atualizar o Firmware"
        echo "12. Configurar Backup"
        echo "13. Gerenciar Drivers de Dispositivos"
        echo "14. Instalar Ferramentas de Diagnóstico"
        echo "15. Mostrar Informações do Sistema"
        echo "16. Voltar ao Menu Principal"

        read -p "Sua escolha (1-16): " CHOICE

        case $CHOICE in
            1) set_timezone ;;
            2) configure_hostname ;;
            3) set_language_and_keyboard ;;
            4) install_and_configure_software ;;
            5) detect_and_install_video_drivers ;;
            6) optimize_cpu_performance ;;
            7) configure_ram_and_ssd ;;
            8) install_printer_scanner_software ;;
            9) configure_power_settings ;;
            10) configure_security ;;
            11) update_firmware ;;
            12) configure_backup ;;
            13) manage_device_drivers ;;
            14) install_diagnostic_tools ;;
            16) show_system_info ;;
            16) break ;;
            *) echo "Opção inválida. Tente novamente." ;;
        esac
    done
}



function set_timezone() {
    while true; do
        echo "Configurando o fuso horário do sistema..."
        read -p "Digite o fuso horário (por exemplo, America/Sao_Paulo): " TIMEZONE
        
        if timedatectl list-timezones | grep -q "^$TIMEZONE$"; then
            sudo timedatectl set-timezone "$TIMEZONE"
            echo "Fuso horário definido para $TIMEZONE."
        
            break
        else
            echo "Fuso horário inválido. Tente novamente."
        fi
    done
}



function configure_hostname() {
    while true; do
        echo "Configurando o nome do host do sistema..."
        read -p "Digite o novo nome do host: " HOSTNAME
        
        if [[ "$HOSTNAME" =~ ^[a-zA-Z0-9_-]+$ ]]; then
            sudo hostnamectl set-hostname "$HOSTNAME"
            sudo sed -i "s/127.0.1.1.*/127.0.1.1 $HOSTNAME/" /etc/hosts
        
            echo "Nome do host definido como $HOSTNAME."
        
            break
        else
            echo "Nome do host inválido. Apenas caracteres alfanuméricos, hífens e sublinhados são permitidos."
        fi
    done
}



function set_language_and_keyboard() {
    while true; do
        echo "Configurando o idioma do sistema e o layout do teclado..."
        read -p "Digite o locale do sistema (por exemplo, pt_BR.UTF-8): " LOCALE
        
        if locale -a | grep -q "^$LOCALE\$"; then
            sudo update-locale LANG="$LOCALE"
        
            break
        else
            echo "Locale inválido. Tente novamente."
        fi
    done

    while true; do
        read -p "Digite o layout do teclado (por exemplo, br): " KEYBOARD_LAYOUT
        
        if localectl list-keymaps | grep -q "^$KEYBOARD_LAYOUT$"; then
            sudo localectl set-keymap "$KEYBOARD_LAYOUT"
        
            echo "Idioma do sistema definido para $LOCALE e layout do teclado definido como $KEYBOARD_LAYOUT."
        
            break
        else
            echo "Layout do teclado inválido. Tente novamente."
        fi
    done
}



function install_and_configure_software() {
    echo "Instalando e configurando software essencial..."
    
    sudo apt update -y
    sudo apt install -y curl git vim htop build-essential preload

    echo "Software essencial instalado com sucesso."
}



function detect_and_install_video_drivers() {
    echo "Detectando e instalando drivers de vídeo..."

    GPU_MODEL=$(lspci | grep -i vga | awk -F: '{print $3}')

    echo "GPU detectada: $GPU_MODEL"

    case $GPU_MODEL in
        *NVIDIA*)
            sudo apt install -y nvidia-driver
            ;;
        *AMD*)
            sudo apt install -y firmware-amd-graphics
            ;;
        *Intel*)
            echo "GPU Intel detectada. Nenhum driver proprietário necessário."
            ;;
        *)
            echo "GPU desconhecida. Instale os drivers manualmente."
            ;;
    esac

    echo "Drivers de vídeo instalados com base na GPU detectada."
}



function optimize_cpu_performance() {
    echo "Otimizar o desempenho da CPU..."

    sudo apt install -y cpufrequtils

    echo "GOVERNOR='performance'" | sudo tee /etc/default/cpufrequtils > /dev/null
    sudo systemctl restart cpufrequtils

    echo "Otimização de desempenho da CPU aplicada."
}



function configure_ram_and_ssd() {
    echo "Configurando as definições de RAM e SSD..."

    if ! sudo apt install -y preload; then
        echo "Falha ao instalar o preload."
        return 1
    fi

    echo "Configurar a swapfile..."
    
    SWAPFILE="/swapfile"

    if ! sudo dd if=/dev/zero of="$SWAPFILE" bs=1M count=2048 status=progress; then
        echo "Falha ao criar o swapfile."
        return 1
    fi

    sudo chmod 600 "$SWAPFILE"
    if ! sudo mkswap "$SWAPFILE"; then
        echo "Falha ao configurar a área de troca."
        return 1
    fi

    if ! sudo swapon "$SWAPFILE"; then
        echo "Falha ao ativar o ficheiro de troca."
        return 1
    fi

    echo "$SWAPFILE none swap sw 0 0 0" | sudo tee -a /etc/fstab > /dev/null

    if grep -q "descartar" /etc/fstab; then
        echo "A TRIM já está activada."
    else
        echo "Ativar TRIM para SSD..."

        if ! sudo sed -i '/swap/s/defaults/defaults,discard/' /etc/fstab; then
            echo "Falha ao ativar TRIM para SSD."
            return 1
        fi

        echo "TRIM ativado para SSD."
    fi

    echo "Definições de RAM e SSD configuradas."
}


function show_system_info() {
    echo "Mostrando informações do sistema..."

    echo "Detalhes do Sistema:"
    uname -a

    echo
    echo "Uso de Memória:"
    free -h

    echo
    echo "Uso de Disco:"
    df -h

    echo
    echo "Informações da CPU:"
    lscpu

    echo
    echo "Informações da GPU:"
    lspci | grep -i vga

    echo

    while true; do
        read -rsn1 input
        
        if [[ $input == 'q' ]]; then
            break
        fi
    done
}



function install_printer_scanner_software() {
    echo "Instalando software de impressora e scanner..."

    sudo apt install -y cups hplip sane

    echo "Software de impressora e scanner instalado."
}



function configure_power_settings() {
    echo "Configurando configurações de energia..."

    sudo apt install -y tlp
    sudo systemctl enable tlp
    sudo systemctl start tlp

    echo "Configurações de energia configuradas com TLP."
}



function configure_security() {
    echo "Configurando segurança do sistema..."

    sudo apt install -y ufw fail2ban
    sudo ufw enable
    sudo ufw default deny incoming
    sudo ufw default allow outgoing

    echo "Configuração de segurança concluída com UFW e Fail2Ban."
}



function update_firmware() {
    echo -e "\n\n"
    echo "A verificar se o sistema está a funcionar em modo UEFI..."

    if [ -d /sys/firmware/efi ]; then
        echo "O sistema está a funcionar em modo UEFI. Prosseguindo com a atualização do firmware..."

        echo "A atualizar o firmware do sistema..."
        
        if ! sudo apt install -y fwupd; then
            echo "Falha na instalação do fwupd."
            return 1
        fi
        
        if ! sudo fwupdmgr update; then
            echo "Falha na atualização do firmware."
            return 1
        fi
        
        echo "O firmware do sistema foi atualizado com êxito."

    else
        echo "Aviso: O sistema está a ser executado no modo Legacy BIOS."
        echo "As actualizações de firmware UEFI não podem ser aplicadas no modo Legacy BIOS."
        echo "Reinicie no modo UEFI para efetuar a atualização do firmware."
    fi
}



function manage_device_drivers() {
    echo "Gerenciando drivers de dispositivos adicionais..."

    sudo apt install -y linux-firmware

    echo "Drivers de dispositivos adicionais gerenciados."
}



function install_diagnostic_tools() {
    echo "Instalando ferramentas de diagnóstico..."

    sudo apt install -y smartmontools lm-sensors
    sudo sensors-detect --auto

    echo "Ferramentas de diagnóstico instaladas e sensores detectados."
}