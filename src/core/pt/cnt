#!/bin/bash



function configure_network_pt() {
    local CHOICE=-1

    while true; do
        clear

        echo "Escolha uma opção para configurar a rede:"
        echo "1. Configurar Interface de Rede"
        echo "2. Definir Endereço IP Estático"
        echo "3. Configurar Servidores DNS"
        echo "4. Mostrar Status da Rede"
        echo "5. Reiniciar Serviços de Rede"
        echo "6. Voltar ao Menu Principal"

        read -p "Sua escolha (1-6): " CHOICE

        case $CHOICE in
            1) configure_network_interface ;;
            2) set_static_ip ;;
            3) configure_dns ;;
            4) show_network_status ;;
            5) restart_network_services ;;
            6) break ;;
            *) echo "Opção inválida. Por favor, tente novamente." ;;
        esac
    done
}



function configure_network_interface() {
    echo "Configurando interface de rede..."

    echo "Interfaces de rede disponíveis:"
    ip link show | awk -F: '$1 !~ "lo|vir|wl|^[^0-9]" {print $2}'

    read -p "Digite a interface que deseja configurar (por exemplo, eth0): " INTERFACE

    if ip link show "$INTERFACE" &> /dev/null; then
        read -p "Você deseja habilitar ou desabilitar esta interface? (habilitar/desabilitar): " ACTION

        if [ "$ACTION" == "habilitar" ]; then
            sudo ip link set "$INTERFACE" up
            echo "Interface $INTERFACE habilitada."
        elif [ "$ACTION" == "desabilitar" ]; then
            sudo ip link set "$INTERFACE" down
            echo "Interface $INTERFACE desabilitada."
        else
            echo "Ação inválida. Por favor, tente novamente."
        fi
    else
        echo "Interface $INTERFACE não existe. Por favor, tente novamente."
    fi
}



function set_static_ip() {
    echo "Configurando a rede..."

    while true; do
        echo "Interfaces de rede disponíveis:"
        ip link show | awk -F: '$1 !~ "lo|vir|wl|^[^0-9]" {print $2}'
        
        read -p "Digite a interface de rede que deseja configurar (por exemplo, eth0): " INTERFACE
        if ip link show "$INTERFACE" &> /dev/null; then
            break
        else
            echo "Interface inválida. Por favor, tente novamente."
        fi
    done

    echo "Você deseja configurar um endereço IP estático ou usar DHCP?"
    echo "1. Endereço IP Estático"
    echo "2. Usar DHCP (Configuração automática)"

    read -p "Sua escolha (1-2): " IP_CHOICE

    if [ "$IP_CHOICE" == "1" ]; then
        echo "Você escolheu configurar um endereço IP estático."
        
        DEFAULT_IP="192.168.1.100"
        DEFAULT_NETMASK="255.255.255.0"
        DEFAULT_GATEWAY="192.168.1.1"
        DEFAULT_DNS="8.8.8.8"

        read -p "Digite o endereço IP estático [padrão: $DEFAULT_IP]: " IP_ADDRESS
        IP_ADDRESS=${IP_ADDRESS:-$DEFAULT_IP}

        read -p "Digite a máscara de rede [padrão: $DEFAULT_NETMASK]: " NETMASK
        NETMASK=${NETMASK:-$DEFAULT_NETMASK}

        read -p "Digite o gateway [padrão: $DEFAULT_GATEWAY]: " GATEWAY
        GATEWAY=${GATEWAY:-$DEFAULT_GATEWAY}

        read -p "Digite o servidor DNS [padrão: $DEFAULT_DNS]: " DNS
        DNS=${DNS:-$DEFAULT_DNS}

        sudo ip addr add "$IP_ADDRESS/$NETMASK" dev "$INTERFACE"
        sudo ip route add default via "$GATEWAY"
        echo "nameserver $DNS" | sudo tee /etc/resolv.conf > /dev/null

        echo "Configuração IP estática aplicada à interface $INTERFACE."
    else
        echo "Você escolheu usar DHCP."

        sudo ip addr flush dev "$INTERFACE"
        sudo ip route flush dev "$INTERFACE"

        sudo dhclient "$INTERFACE"

        echo "Configuração DHCP aplicada à interface $INTERFACE."
    fi
}



function configure_dns() {
    echo "Configurando servidores DNS..."

    echo "Escolha uma configuração de servidor DNS:"
    echo "1. DNS do Google (8.8.8.8, 8.8.4.4)"
    echo "2. DNS da Cloudflare (1.1.1.1, 1.0.0.1)"
    echo "3. DNS da OpenDNS (208.67.222.222, 208.67.220.220)"
    echo "4. DNS da Quad9 (9.9.9.9, 149.112.112.112)"
    echo "5. Servidores DNS personalizados"

    read -p "Sua escolha (1-5): " DNS_CHOICE

    case $DNS_CHOICE in
        1)
            DNS1="8.8.8.8"
            DNS2="8.8.4.4"
            ;;
        2)
            DNS1="1.1.1.1"
            DNS2="1.0.0.1"
            ;;
        3)
            DNS1="208.67.222.222"
            DNS2="208.67.220.220"
            ;;
        4)
            DNS1="9.9.9.9"
            DNS2="149.112.112.112"
            ;;
        5)
            read -p "Digite o servidor DNS primário (por exemplo, 8.8.8.8): " DNS1
            read -p "Digite o servidor DNS secundário (opcional, pressione Enter para pular): " DNS2
            ;;
        *)
            echo "Escolha inválida. Aplicando DNS do Google por padrão."
            DNS1="8.8.8.8"
            DNS2="8.8.4.4"
            ;;
    esac

    echo "nameserver $DNS1" | sudo tee /etc/resolv.conf > /dev/null

    if [ -n "$DNS2" ]; then
        echo "nameserver $DNS2" | sudo tee -a /etc/resolv.conf > /dev/null
    fi

    echo "Configuração DNS aplicada: $DNS1 ${DNS2:+e $DNS2}"
}



function show_network_status() {
    echo "Mostrando status da rede..."

    echo "Endereço IP e Roteamento:"
    ip addr show
    echo
    ip route show

    echo
    echo "Configuração DNS:"
    cat /etc/resolv.conf

    echo
    echo "Status da rede exibido com sucesso."

    while true; do
        read -rsn1 input
        
        if [[ $input == 'q' ]]; then
            break
        fi
    done
}



function restart_network_services() {
    echo "Reiniciando serviços de rede..."

    sudo systemctl restart networking
    sudo systemctl restart NetworkManager

    echo "Serviços de rede reiniciados."
}