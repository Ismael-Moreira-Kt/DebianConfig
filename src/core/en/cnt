#!/bin/bash



function configure_network_en() {
    local CHOICE=-1

    while true; do
        clear

        echo "Choose an option to configure the network:"
        echo "1. Configure Network Interface"
        echo "2. Set Static IP Address"
        echo "4. Configure DNS Servers"
        echo "5. Show Network Status"
        echo "6. Restart Network Services"
        echo "7. Return to Main Menu"

        read -p "Your choice (1-7): " CHOICE

        case $CHOICE in
            1) configure_network_interface ;;
            2) set_static_ip ;;
            4) configure_dns ;;
            5) show_network_status ;;
            6) restart_network_services ;;
            7) break ;;
            *) echo "Invalid option. Please try again." ;;
        esac
    done
}



function configure_network_interface() {
    echo "Configuring network interface..."

    echo "Available network interfaces:"
    ip link show | awk -F: '$1 !~ "lo|vir|wl|^[^0-9]" {print $2}'

    read -p "Enter the interface to configure (e.g., eth0): " INTERFACE

    if ip link show "$INTERFACE" &> /dev/null; then
        read -p "Do you want to enable or disable this interface? (enable/disable): " ACTION

        if [ "$ACTION" == "enable" ]; then
            sudo ip link set "$INTERFACE" up
            echo "Interface $INTERFACE enabled."
        elif [ "$ACTION" == "disable" ]; then
            sudo ip link set "$INTERFACE" down
            echo "Interface $INTERFACE disabled."
        else
            echo "Invalid action. Please try again."
        fi
    else
        echo "Interface $INTERFACE does not exist. Please try again."
    fi
}



function set_static_ip() {
    echo "Setting up network configuration..."

    while true; do
        echo "Available network interfaces:"
        ip link show | awk -F: '$1 !~ "lo|vir|wl|^[^0-9]" {print $2}'
        
        read -p "Enter the network interface you want to configure (e.g., eth0): " INTERFACE
        if ip link show "$INTERFACE" &> /dev/null; then
            break
        else
            echo "Invalid interface. Please try again."
        fi
    done

    echo "Would you like to configure a static IP address or use DHCP?"
    echo "1. Static IP Address"
    echo "2. Use DHCP (Automatic configuration)"

    read -p "Your choice (1-2): " IP_CHOICE

    if [ "$IP_CHOICE" == "1" ]; then
        echo "You've chosen to configure a static IP address."
        
        DEFAULT_IP="192.168.1.100"
        DEFAULT_NETMASK="255.255.255.0"
        DEFAULT_GATEWAY="192.168.1.1"
        DEFAULT_DNS="8.8.8.8"

        read -p "Enter the static IP address [default: $DEFAULT_IP]: " IP_ADDRESS
        IP_ADDRESS=${IP_ADDRESS:-$DEFAULT_IP}

        read -p "Enter the netmask [default: $DEFAULT_NETMASK]: " NETMASK
        NETMASK=${NETMASK:-$DEFAULT_NETMASK}

        read -p "Enter the gateway [default: $DEFAULT_GATEWAY]: " GATEWAY
        GATEWAY=${GATEWAY:-$DEFAULT_GATEWAY}

        read -p "Enter the DNS server [default: $DEFAULT_DNS]: " DNS
        DNS=${DNS:-$DEFAULT_DNS}

        sudo ip addr add "$IP_ADDRESS/$NETMASK" dev "$INTERFACE"
        sudo ip route add default via "$GATEWAY"
        echo "nameserver $DNS" | sudo tee /etc/resolv.conf > /dev/null

        echo "Static IP configuration applied to $INTERFACE."
    else
        echo "You've chosen to use DHCP."

        sudo ip addr flush dev "$INTERFACE"
        sudo ip route flush dev "$INTERFACE"

        sudo dhclient "$INTERFACE"

        echo "DHCP configuration applied to $INTERFACE."
    fi
}



function configure_dns() {
    echo "Configuring DNS servers..."

    echo "Choose a DNS server configuration:"
    echo "1. Google DNS (8.8.8.8, 8.8.4.4)"
    echo "2. Cloudflare DNS (1.1.1.1, 1.0.0.1)"
    echo "3. OpenDNS (208.67.222.222, 208.67.220.220)"
    echo "4. Quad9 DNS (9.9.9.9, 149.112.112.112)"
    echo "5. Custom DNS servers"

    read -p "Your choice (1-5): " DNS_CHOICE

    case $DNS_CHOICE in
        1)
            DNS1="8.8.8.8"
            DNS2="8.8.4.4"
            ;;
        2)
            DNS1="1.1.1.1"
            DNS2="1.0.0.1"
            ;;
        3)
            DNS1="208.67.222.222"
            DNS2="208.67.220.220"
            ;;
        4)
            DNS1="9.9.9.9"
            DNS2="149.112.112.112"
            ;;
        5)
            read -p "Enter the primary DNS server (e.g., 8.8.8.8): " DNS1
            read -p "Enter the secondary DNS server (optional, press Enter to skip): " DNS2
            ;;
        *)
            echo "Invalid choice. Applying Google DNS by default."
            DNS1="8.8.8.8"
            DNS2="8.8.4.4"
            ;;
    esac

    echo "nameserver $DNS1" | sudo tee /etc/resolv.conf > /dev/null

    if [ -n "$DNS2" ]; then
        echo "nameserver $DNS2" | sudo tee -a /etc/resolv.conf > /dev/null
    fi

    echo "DNS configuration applied: $DNS1 ${DNS2:+and $DNS2}"
}



function show_network_status() {
    echo "Showing network status..."

    echo "IP Address and Routing:"
    ip addr show
    echo
    ip route show

    echo
    echo "DNS Configuration:"
    cat /etc/resolv.conf

    echo
    echo "Network status displayed successfully."

    while true; do
        read -rsn1 input
        
        if [[ $input == 'q' ]]; then
            break
        fi
    done
}